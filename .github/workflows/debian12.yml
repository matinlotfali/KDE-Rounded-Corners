name: Debian 12

on:
  push:
    branches: [ master ]
    paths-ignore: [ '**.md', '**.png' ]
  pull_request:
    branches: [ master ]
    paths-ignore: [ '**.md', '**.png' ]
  schedule:
    - cron: "0 0 * * *"

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  debian12:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    container:
      image: debian:12
      options: --user root

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Refresh Debian Packages
      run: apt update && apt -y dist-upgrade
      continue-on-error: true

    - name: Install Dependencies
      run: |
        apt -y install cmake g++ gettext extra-cmake-modules qttools5-dev libkf5configwidgets-dev kwin-dev
        apt -y install dpkg-dev file
    
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake . -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build . --config ${{env.BUILD_TYPE}} -j

    - id: package
      name: Package
      if: github.event_name != 'schedule'
      run: |
        cpack -V -G DEB
        DEB_NAME=kwin4_effect_shapecorners
        SHORT_SHA=$(echo $GITHUB_SHA | head -c 5)
        mkdir artifacts
        mv ${DEB_NAME}.deb artifacts/${DEB_NAME}_${GITHUB_JOB}_${SHORT_SHA}.deb

    - name: Upload Artifact
      uses: actions/upload-artifact@v4.3.2
      if: github.event_name != 'schedule'
      with:
        name: Deb Package
        path: ./artifacts/
        compression-level: 0
        if-no-files-found: error

#     - name: Test
#       working-directory: ${{github.workspace}}/build
#       # Execute tests defined by the CMake configuration.  
#       # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#       run: ctest -C ${{env.BUILD_TYPE}}
      
